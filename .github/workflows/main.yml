name: CI

on:
  push:
    branches: [ 'master', 'main', 'oldVersionTest', 'release/**' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  # -------------- Test Compile Against Old wolfSSL Versions ------------
  # Only check one Linux and Mac JDK version with --enable-jni --enable-all
  # as sanity. Using Zulu, but this can be expanded if needed.
  #
  # In our native JNI code, we sometimes compile conditionally based on
  # LIBWOLFSSL_VERSION_HEX. Current values checked are:
  #
  # LIBWOLFSSL_VERSION_HEX >= 0x4004000  (4.4.0) - we will test 4.3.0
  # LIBWOLFSSL_VERSION_HEX <  0x04002000 (4.2.0) - we will test 4.1.0
  # LIBWOLFSSL_VERSION_HEX >= 0x0400200  (4.2.0) - we will test 4.1.0
  # LIBWOLFSSL_VERSION_HEX >  0x05007000 (5.7.0) - we will test 5.6.6
  # LIBWOLFSSL_VERSION_HEX >= 0x05006006 (5.6.6) - we will test 5.6.4
  #
  old-wolfssl-test:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
        jdk_version: [ '11' ]
        wolfssl_configure: [ '--enable-jni --enable-all' ]
        wolfssl_version: [ '4.1.0', '4.3.0', '5.6.4', '5.6.6' ]
    name: Legacy wolfSSL Build ${{ matrix.wolfssl_version }} ${{ matrix.os }} (Zulu JDK ${{ matrix.jdk.version }}, ${{ matrix.wolfssl_configure}})
    uses: ./.github/workflows/linux-common-release-zip.yml
    with:
      os: ${{ matrix.os }}
      jdk_distro: "zulu"
      jdk_version: ${{ matrix.jdk_version }}
      wolfssl_configure: ${{ matrix.wolfssl_configure }}
      wolfssl_version: ${{ matrix.wolfssl_version }}

